@model IEGen.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<div class="container" style="padding:0px 10px; margin-bottom:20px">
    <h3 style="margin-top:10px;">@ViewBag.Title</h3>

    @using (Ajax.BeginForm("ResetPasswordAction", "Account", null,
                            new AjaxOptions
                            {
                                OnBegin = "AddCog('SubmitBtn', ' Processing...')",
                                OnFailure = "RestoreElementShowAlert('SubmitBtn', 'Reset Password', 'ConfirmResult', xhr)"
                            },
                            new { @class = "limit4", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        @Html.HiddenFor(model => model.ResetID)

        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
        <span class="validation-msg">@Html.ValidationMessageFor(m => m.Email)</span>
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control fm-sp" })

        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
        <span class="validation-msg">@Html.ValidationMessageFor(m => m.Password)</span>
        @Html.PasswordFor(m => m.Password, new { @class = "form-control fm-sp", placeholder = "[Must contain a number]" })

        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
        <span class="validation-msg">@Html.ValidationMessageFor(m => m.ConfirmPassword)</span>
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control fm-sp" })

        <div id="ConfirmResult"></div>
        <button type="submit" id="SubmitBtn" class="btn btn-success fm-sp">Reset Password</button>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")
}
