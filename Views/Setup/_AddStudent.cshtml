@model IEGen.Models.EditStudentViewModel

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="PViewTitle">Add Student</h4>
    </div>
    <form id="AddForm" class="modal-body form-panel-body row" role="form">
        @Html.HiddenFor(m => m.SchoolID)

        <div class="col-sm-6">
            @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.FirstName)</span>
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.OtherName, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.OtherName)</span>
            @Html.TextBoxFor(m => m.OtherName, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Surname, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Surname)</span>
            @Html.TextBoxFor(m => m.Surname, new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.Sex, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Sex)</span>
            @Html.EnumDropDownListFor(m => m.Sex, "-- Select Sex --", new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.BirthDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.BirthDate)</span>
            @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.LocationID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.LocationID)</span>
            @Html.DropDownListFor(m => m.LocationID, Model.LocationList, "-- Select Location --", new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.ClassID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ClassID)</span>
            @Html.DropDownListFor(m => m.ClassID, Model.ClassList, "-- Select Class --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.StudentCode, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.StudentCode)</span>
            @Html.TextBoxFor(m => m.StudentCode, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-xs-12">
            @Html.LabelFor(m => m.Photo, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Photo)</span>
            @Html.TextBoxFor(m => m.Photo, new { @class = "form-control fm-sp", type = "file" })
        </div>

        <input type="submit" id="SubmitBtn" style="display:none" />

        <div id="SimilarDiv" class="col-xs-12"></div>

    </form>
    <div class="modal-footer">
        <div id="MsgDiv"></div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

        <button id="SubmitBtnO" class="btn btn-success" onclick="return document.getElementById('SubmitBtn').click();">Save</button>
    </div>
</div>
