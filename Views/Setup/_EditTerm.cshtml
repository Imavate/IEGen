@model IEGen.Models.EditTermViewModel

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="PViewTitle">Edit Term: @Model.Name</h4>
    </div>
    <div id="BodyDiv">
        @using (Ajax.BeginForm("UpdateTerm", "Setup", null,
                                new AjaxOptions
                                {
                                    OnBegin = "AddCog('SubmitBtnO', ' Processing...')",
                                    OnFailure = "RestoreElementShowAlert('SubmitBtnO', 'Save Changes', 'MsgDiv', xhr)",
                                    OnSuccess = "EditTermSuccess"
                                },
                                new { @class = "modal-body form-panel-body", role = "form" }))
        {
            @Html.HiddenFor(m => m.TermID)
            @Html.HiddenFor(m => m.SchoolID)

            @Html.LabelFor(m => m.SchoolYear, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.SchoolYear)</span>
            @Html.TextBoxFor(m => m.SchoolYear, new { @class = "form-control fm-sp", type = "number" })

            @Html.LabelFor(m => m.TermNumber, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.TermNumber)</span>
            @Html.TextBoxFor(m => m.TermNumber, new { @class = "form-control fm-sp", type = "number" })

            @Html.LabelFor(m => m.Name, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Name)</span>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control fm-sp", @placeholder = "Optional" })

            @Html.LabelFor(m => m.ExamStartDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ExamStartDate)</span>
            @Html.TextBoxFor(m => m.ExamStartDate, "{0:d}", new { @class = "form-control fm-sp" })

            @Html.LabelFor(m => m.ExamEndDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ExamEndDate)</span>
            @Html.TextBoxFor(m => m.ExamEndDate, "{0:d}", new { @class = "form-control fm-sp" })

            @Html.LabelFor(m => m.ScoreCollectionDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ScoreCollectionDate)</span>
            @Html.TextBoxFor(m => m.ScoreCollectionDate, "{0:d}", new { @class = "form-control fm-sp" })

            @Html.LabelFor(m => m.VacationDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.VacationDate)</span>
            @Html.TextBoxFor(m => m.VacationDate, "{0:d}", new { @class = "form-control fm-sp" })

            @Html.LabelFor(m => m.NextResumptionDate, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.NextResumptionDate)</span>
            @Html.TextBoxFor(m => m.NextResumptionDate, "{0:d}", new { @class = "form-control fm-sp" })

            @Html.LabelFor(m => m.DaysOpened, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.DaysOpened)</span>
            @Html.TextBoxFor(m => m.DaysOpened, new { @class = "form-control fm-sp", type = "number" })

            <input type="submit" id="SubmitBtn" style="display:none" />
        }

        <div class="modal-footer">
            <div id="MsgDiv"></div>
            <button type="button" class="btn btn-default bts" data-dismiss="modal" tabindex="-1">Close</button>

            @if (Model.CanDelete)
            {
                using (Ajax.BeginForm("DeleteTerm", "Setup", new { TermID = Model.TermID },
                                        new AjaxOptions
                                        {
                                            OnBegin = "AddCog('DeleteBtnO', ' Processing...')",
                                            OnFailure = "RestoreElementShowAlert('DeleteBtnO', 'Delete', 'MsgDiv', xhr)",
                                            OnSuccess = "DeleteTermSuccess",
                                            Confirm = "Do you really want to delete this Term?"
                                        },
                                        new { role = "form", style = "display:none" }))
                {
                    <input type="submit" id="DeleteBtn" />
                }

                <button id="DeleteBtnO" class="btn btn-warning bts" onclick="return document.getElementById('DeleteBtn').click();">Delete</button>
            }

            <button id="SubmitBtnO" class="btn btn-success bts" onclick="return document.getElementById('SubmitBtn').click();">Save Changes</button>

        </div>
    </div>
</div>
