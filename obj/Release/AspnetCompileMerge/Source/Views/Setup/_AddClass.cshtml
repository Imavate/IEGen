@model IEGen.Models.EditClassViewModel

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="PViewTitle">Add Class</h4>
    </div>
    @using (Ajax.BeginForm("CreateClass", "Setup", null,
                            new AjaxOptions
                            {
                                OnBegin = "AddCog('SubmitBtnO', ' Processing...')",
                                OnFailure = "RestoreElementShowAlert('SubmitBtnO', 'Save', 'MsgDiv', xhr)"
                            },
                            new { @class = "modal-body form-panel-body row", role = "form" }))
    {
        @Html.HiddenFor(g => g.TermID)


        <div class="col-sm-6">
            @Html.LabelFor(m => m.ArmID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ArmID)</span>
            @Html.DropDownListFor(m => m.ArmID, Model.ArmList, "-- Select Class Arm --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.GradeGroupID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.GradeGroupID)</span>
            @Html.DropDownListFor(m => m.GradeGroupID, Model.GradeGroupList, "-- Select Grade Group --", new { @class = "form-control fm-sp" })
        </div>
        <div class="clearboth"></div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.CAWeight, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.CAWeight)</span>
            @Html.TextBoxFor(m => m.CAWeight, new { @class = "form-control fm-sp", type = "number" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.ExamWeight, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ExamWeight)</span>
            @Html.TextBoxFor(m => m.ExamWeight, new { @class = "form-control fm-sp", type = "number" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.RedLine, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.RedLine)</span>
            @Html.TextBoxFor(m => m.RedLine, new { @class = "form-control fm-sp", type = "number" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.DaysOpened, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.DaysOpened)</span>
            @Html.TextBoxFor(m => m.DaysOpened, new { @class = "form-control fm-sp", type = "number", @Value = "0" })
        </div>

        <div class="col-sm-6">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.ShowPosition) Show Position?</label>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.HideClassAverage) Hide Class Average?</label>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.ShowSummaryGrade) Show Summary Grade?</label>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.ShowCategoryAnalysis) Show Category Analysis?</label>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.IsPromotionalClass) Is Promotional Class?</label>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="col-xs-12 PromotionDiv" style="display:none"><hr class="sp-t0" /></div>

        <div class="col-sm-6 PromotionDiv" style="display:none">
            @Html.LabelFor(m => m.PromotionCommentGroupID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.PromotionCommentGroupID)</span>
            @Html.DropDownListFor(m => m.PromotionCommentGroupID, Model.PromotionCommentGroupList, "-- Select Comment Group --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6 PromotionDiv" style="display:none">
            <div class="fm-sp pad-t5">
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.ShowYearResult) Show Year Result?</label>
                </div>
                <div class="checkbox cb-btm5">
                    <label>@Html.CheckBoxFor(m => m.CommentOnYearResult) Comment On Year Result?</label>
                </div>
            </div>
        </div>

        <div class="col-xs-12"><hr class="sp-t0" /></div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.PerformanceCommentGroupID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.PerformanceCommentGroupID)</span>
            @Html.DropDownListFor(m => m.PerformanceCommentGroupID, Model.PerformanceCommentGroupList, "-- Select Comment Group --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.ImprovementCommentGroupID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.ImprovementCommentGroupID)</span>
            @Html.DropDownListFor(m => m.ImprovementCommentGroupID, Model.ImprovementCommentGroupList, "-- Select Comment Group --", new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.SkillGroupID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.SkillGroupID)</span>
            @Html.DropDownListFor(m => m.SkillGroupID, Model.SkillGroupList, "-- Select Skill Group --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.FormatID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.FormatID)</span>
            @Html.DropDownListFor(m => m.FormatID, Model.FormatList, "-- Select Entry Format --", new { @class = "form-control fm-sp" })
        </div>
        <div class="clearboth"></div>

        <input type="submit" id="SubmitBtn" style="display:none" />
    }
    <div class="modal-footer">
        <div id="MsgDiv"></div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

        <button id="SubmitBtnO" class="btn btn-success" onclick="return document.getElementById('SubmitBtn').click();">Save</button>
    </div>
</div>
