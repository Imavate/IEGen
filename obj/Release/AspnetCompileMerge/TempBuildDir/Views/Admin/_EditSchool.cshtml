@model IEGen.Models.EditSchoolViewModel
@{
    var oldPicStyle = Model.NoLogo ? "display:none" : "";
    var newPicStyle = Model.NoLogo ? "" : "display:none";
}

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="PViewTitle">Edit School</h4>
    </div>
    <form id="UpdateForm" class="modal-body form-panel-body row" role="form">

        @Html.HiddenFor(m => m.SchoolID)
        @Html.HiddenFor(m => m.GuidString)

        <div class="col-xs-12">
            @Html.LabelFor(m => m.Name, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Name)</span>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.SchoolType, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.SchoolType)</span>
            @Html.EnumDropDownListFor(m => m.SchoolType, "-- Select School Type --", new { @class = "form-control fm-sp" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.LocationID, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.LocationID)</span>
            @Html.DropDownListFor(m => m.LocationID, Model.LocationList, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-xs-12">
            @Html.LabelFor(m => m.Address, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Address)</span>
            @Html.TextAreaFor(m => m.Address, 3, 50, new { @class = "form-control fm-sp" })
            <hr />
        </div>

        <div class="col-xs-12">
            @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Phone)</span>
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Email)</span>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control fm-sp", type = "email" })
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(m => m.Website, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Website)</span>
            @Html.TextBoxFor(m => m.Website, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-xs-12">
            @Html.LabelFor(m => m.WriteUp, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.WriteUp)</span>
            @Html.TextAreaFor(m => m.WriteUp, 3, 50, new { @class = "form-control fm-sp" })
        </div>

        <div class="col-xs-12"><hr /></div>

        <div class="col-xs-12" style="@oldPicStyle">
            <p><img height="120" width="120" class="img-responsive" src="@Model.LogoSrc" title="@Model.Name" /></p>
            <button type="button" class="btn btn-default Pic" onclick="$('.Pic').toggle();">Change Logo</button>
            <div class="fm-sp"></div>
        </div>

        <div class="col-xs-12 Pic" style="@newPicStyle">
            @Html.LabelFor(m => m.Logo, new { @class = "control-label" })
            <span class="validation-msg">@Html.ValidationMessageFor(m => m.Logo)</span>
            @Html.TextBoxFor(m => m.Logo, new { @class = "form-control fm-sp", type = "file" })
        </div>

        <input type="submit" id="SubmitBtn" style="display:none" />

    </form>
    <div class="modal-footer">
        <div id="MsgDiv"></div>
        <button type="button" class="btn btn-default bts" data-dismiss="modal" tabindex="-1">Close</button>

        @if (Model.CanDelete)
            {
                using (Ajax.BeginForm("DeleteSchool", "Admin", new { SchoolID = Model.SchoolID },
                                        new AjaxOptions
                                        {
                                            OnBegin = "AddCog('DeleteBtnO', ' Processing...')",
                                            OnFailure = "RestoreElementShowAlert('DeleteBtnO', 'Delete', 'MsgDiv', xhr)",
                                            OnSuccess = "ActionSuccess",
                                            Confirm = "Do you really want to delete this School?"
                                        },
                                        new { role = "form", style = "display:none" }))
                {
                <input type="submit" id="DeleteBtn" />
            }

            <button id="DeleteBtnO" class="btn btn-warning bts" onclick="return document.getElementById('DeleteBtn').click();">Delete</button>
        }

        <button id="SubmitBtnO" class="btn btn-success bts" onclick="return document.getElementById('SubmitBtn').click();">Save Changes</button>

    </div>
</div>
