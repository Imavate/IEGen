@model IEGen.Models.ScorePageViewModel

@{ 
    var caStyle = Model.NoCA ? "display:none" : "";
    var changeCAText = Model.NoCA ? "Enter CAs" : "Enter Totals";
}

@using (Ajax.BeginForm("EnterScores", "Data", null,
                        new AjaxOptions
                        {
                            OnBegin = "AddCog('SubmitBtnO', ' Processing...')",
                            OnFailure = "RestoreElementShowAlert('SubmitBtnO', 'Save Changes', 'MsgDiv', xhr)",
                            OnSuccess = "ActionSuccess"
                        },
                        new { @class = "modal-body form-panel-body", role = "form" }))
{
    @Html.HiddenFor(m => m.SubjectID)
    @Html.HiddenFor(m => m.Name)
    @Html.HiddenFor(m => m.ClassName)
    @Html.HiddenFor(m => m.UserID)
    @Html.TextBoxFor(m => m.MaxCAScore, new { @class = "hideval" })
    @Html.TextBoxFor(m => m.MaxExamScore, new { @class = "hideval" })

    <table id="pmDT" class="table table-hover table-bordered fullwidth" data-order="[]">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th style="@caStyle">CA</th>
                <th>Exam</th>
            </tr>
        </thead>
        <tbody id="pmDTBody">
            @for (int i = 0; i < Model.Scores.Count; i++)
            {
                @Html.HiddenFor(m => m.Scores[i].StudentID)
                @Html.TextBoxFor(m => m.Scores[i].MaxCAScore, new { @class = "hideval" })
                @Html.TextBoxFor(m => m.Scores[i].MaxExamScore, new { @class = "hideval" })
                var pm = Model.Scores[i];
                <tr>
                    <td>@pm.SerialNumber</td>
                    <td>@pm.DisplayName</td>
                    <td class="crel" style="@caStyle">
                        <span class="rowval">@Html.ValidationMessageFor(m => m.Scores[i].CAScore)</span>
                        @if (i == 0)
                        {
                            @Html.TextBoxFor(m => m.Scores[i].CAScore, "{0:0.00}", new { @class = "form-control ftext" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Scores[i].CAScore, "{0:0.00}", new { @class = "form-control" })
                        }
                    </td>
                    <td class="crel">
                        <span class="rowval">@Html.ValidationMessageFor(m => m.Scores[i].ExamScore)</span>
                        @Html.TextBoxFor(m => m.Scores[i].ExamScore, "{0:0.00}", new { @class = "form-control" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <input type="submit" id="SubmitBtn" style="display:none" />
}

    <div class="modal-footer">
        <div id="MsgDiv"></div>
        <button type="button" class="btn btn-default bts" data-dismiss="modal" tabindex="-1">Close</button>

        @if (Model.NoCA)
        {
            using (Ajax.BeginForm("AllowCAEntry", "Data", new { SubjectID = Model.SubjectID, UserID = Model.UserID },
                                    new AjaxOptions
                                    {
                                        OnBegin = "AddCog('ChangeCABtnO', ' Processing...')",
                                        OnFailure = "RestoreElementShowAlert('ChangeCABtnO', 'Enter CAs', 'MsgDiv', xhr)",
                                        OnSuccess = "UpdateElement('BodyDiv', xhr)"
                                    },
                                    new { role = "form", style = "display:none" }))
            {
                <input type="submit" id="ChangeCABtn" />
            }
        }
        else
        {
            using (Ajax.BeginForm("SetTotalEntry", "Data", new { SubjectID = Model.SubjectID, UserID = Model.UserID },
                                    new AjaxOptions
                                    {
                                        OnBegin = "AddCog('ChangeCABtnO', ' Processing...')",
                                        OnFailure = "RestoreElementShowAlert('ChangeCABtnO', 'Enter Totals', 'MsgDiv', xhr)",
                                        OnSuccess = "UpdateElement('BodyDiv', xhr)"
                                    },
                                    new { role = "form", style = "display:none" }))
            {
                <input type="submit" id="ChangeCABtn" />
            }
        }

        <button id="ChangeCABtnO" class="btn btn-warning bts" tabindex="-1" onclick="return document.getElementById('ChangeCABtn').click();">@changeCAText</button>

        <button id="SubmitBtnO" class="btn btn-success bts" onclick="return document.getElementById('SubmitBtn').click();">Save Changes</button>

    </div>
