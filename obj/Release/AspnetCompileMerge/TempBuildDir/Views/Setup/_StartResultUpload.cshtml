@model IEGen.Models.UploadStudentScoreViewModel

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="PViewTitle">Upload Previous Scores</h4>
    </div>
    <form id="UploadForm" class="modal-body form-panel-body" role="form">

        @Html.HiddenFor(m => m.StudentID)
        @Html.HiddenFor(m => m.SchoolID)
        @Html.HiddenFor(m => m.Surname)
        @Html.HiddenFor(m => m.FirstName)
        @Html.HiddenFor(m => m.TermName)
        @Html.HiddenFor(m => m.ClassName)

        <label class="control-label">Name</label>
        <p class="control-static">@Model.DisplayName</p>
        <div class="fm-sp"></div>

        <label class="control-label">Terminal Term</label>
        <p class="control-static">@Model.TermName</p>
        <div class="fm-sp"></div>

        <label class="control-label">Terminal Class</label>
        <p class="control-static">@Model.ClassName</p>
        <div class="fm-sp"></div>


        @Html.LabelFor(m => m.ResultFile, new { @class = "control-label" })
        <span class="validation-msg">@Html.ValidationMessageFor(m => m.ResultFile)</span>
        @Html.TextBoxFor(m => m.ResultFile, new { @class = "form-control fm-sp", type = "file" })

        <input type="submit" id="SubmitBtn" style="display:none" />

    </form>
    <div class="modal-footer">
        <div id="MsgDiv"></div>
        <button type="button" class="btn btn-default bts" data-dismiss="modal" tabindex="-1">Close</button>

        <button id="SubmitBtnO" class="btn btn-success bts" onclick="return document.getElementById('SubmitBtn').click();">Upload File</button>

    </div>
</div>
