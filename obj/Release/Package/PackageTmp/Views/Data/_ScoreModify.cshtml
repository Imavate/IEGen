@model IEGen.Models.ModifyPageViewModel

@{
    var caStyle = Model.NoCA ? "display:none" : "";
}

@using (Ajax.BeginForm("ModifyScores", "Data", null,
                        new AjaxOptions
                        {
                            OnBegin = "AddCog('SubmitBtnO', ' Processing...')",
                            OnFailure = "ProcessVerifyError(xhr, status, error)",
                            OnSuccess = "ActionSuccess"
                        },
                        new { @class = "modal-body form-panel-body", role = "form" }))
{
    @Html.HiddenFor(m => m.SubjectID)
    @Html.HiddenFor(m => m.Name)
    @Html.HiddenFor(m => m.ClassName)
    @Html.HiddenFor(m => m.UserID)
    @Html.HiddenFor(m => m.GradeGroupID)
    @Html.HiddenFor(m => m.Corrected)
    @Html.HiddenFor(m => m.ScoreCount)
    @Html.TextBoxFor(m => m.MaxCAScore, new { @class = "hideval" })
    @Html.TextBoxFor(m => m.MaxExamScore, new { @class = "hideval" })
    <table id="pmDT" class="table table-hover table-bordered fullwidth" data-order="[]">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th style="@caStyle">CA</th>
                <th>Exam</th>
            </tr>
        </thead>
        <tbody id="pmDTBody">
            @for (int i = 0; i < Model.Scores.Count; i++)
            {
            <tr>
                @Html.HiddenFor(m => m.Scores[i].SerialNumber)
                @Html.HiddenFor(m => m.Scores[i].StudentID)
                @Html.HiddenFor(m => m.Scores[i].FirstName)
                @Html.HiddenFor(m => m.Scores[i].Surname)
                @Html.TextBoxFor(m => m.Scores[i].MaxCAScore, new { @class = "hideval" })
                @Html.TextBoxFor(m => m.Scores[i].MaxExamScore, new { @class = "hideval" })
                @Html.HiddenFor(m => m.Scores[i].CAScore)
                @Html.HiddenFor(m => m.Scores[i].ExamScore)
                @Html.HiddenFor(m => m.Scores[i].CAScoreV)
                @Html.HiddenFor(m => m.Scores[i].ExamScoreV)
                <td>@Model.Scores[i].SerialNumber</td>
                <td>@Model.Scores[i].DisplayName</td>
                <td class="crel" style="@caStyle">
                    <span class="rowval">@Html.ValidationMessageFor(m => m.Scores[i].CAScoreM)</span>
                    @if (i == 0)
                    {
                        @Html.TextBoxFor(m => m.Scores[i].CAScoreM, "{0:0.00}", new { @class = "form-control ftext" })
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.Scores[i].CAScoreM, "{0:0.00}", new { @class = "form-control" })
                    }
                </td>
                <td class="crel">
                    <span class="rowval">@Html.ValidationMessageFor(m => m.Scores[i].ExamScoreM)</span>
                    @Html.TextBoxFor(m => m.Scores[i].ExamScoreM, "{0:0.00}", new { @class = "form-control" })
                </td>
            </tr>
            }
        </tbody>
    </table>

    <input type="submit" id="SubmitBtn" style="display:none" />
}

<div class="modal-footer">
    <div id="MsgDiv"></div>
    <button type="button" class="btn btn-default bts" data-dismiss="modal" tabindex="-1">Close</button>

    <button id="SubmitBtnO" class="btn btn-success bts" onclick="return document.getElementById('SubmitBtn').click();">Save Changes</button>

</div>
